---
# Create refractr service account, roles and rolebinding so helm cart can run
apiVersion: v1
kind: ServiceAccount
metadata:
  name: refractr
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: refractr
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - update
      - create
      - list
      - patch
      - delete
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: refractr
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: refractr
subjects:
  - kind: ServiceAccount
    name: refractr
---

apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: nginx-ingress
  labels:
    app: refractr
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
spec:
  releaseName: nginx-ingress
  chart:
    repository: https://helm.nginx.com/stable
    name: nginx-ingress
    version: 0.5.0
  values:
    controller:
      useIngressClassOnly: true
      enableCustomResources: false
      scope:
        enabled: true
      config:
        entries:
          use-proxy-protocol: "false"
          use-forwarded-headers: "true"
          proxy-real-ip-cidr: "0.0.0.0/0"   # restrict this to the IP addresses of ELB
    rbac:
      create: true
      scope: true

---
# run a helm pre-install hook, calling the refractr container with an argument to create an Ingress dynamically from the list of domains since we need certs for all of them
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ .Release.Name }}"
  labels:
    app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
    app.kubernetes.io/instance: {{ .Release.Name | quote }}
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
spec:
  template:
    metadata:
      name: "{{ .Release.Name }}"
      labels:
        app.kubernetes.io/managed-by: {{ .Release.Service | quote }}
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
        helm.sh/chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      serviceAccountName: {{ include "refractr.serviceAccountName" . }}
      restartPolicy: Never
      containers:
        - name: pre-install-job
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          args: ["ingress"]
